/**
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 2.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface AdminName
 */
export interface AdminName {
    /**
     *
     * @type {string}
     * @memberof AdminName
     */
    'first'?: string | null;
    /**
     *
     * @type {string}
     * @memberof AdminName
     */
    'last'?: string | null;
}
/**
 *
 * @export
 * @interface BadRequest
 */
export interface BadRequest {
    /**
     *
     * @type {string}
     * @memberof BadRequest
     */
    'message'?: string;
}
/**
 *
 * @export
 * @interface Contact
 */
export interface Contact {
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'district'?: string;
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'email'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'phone'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'phone_type'?: ContactPhoneTypeEnum;
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'relationship'?: ContactRelationshipEnum;
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'sis_id'?: string | null;
    /**
     *
     * @type {Array<string>}
     * @memberof Contact
     */
    'students'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Contact
     */
    'type'?: ContactTypeEnum;
}
export declare const ContactPhoneTypeEnum: {
    readonly Cell: "Cell";
    readonly Home: "Home";
    readonly Work: "Work";
    readonly Other: "Other";
    readonly Empty: "";
};
export declare type ContactPhoneTypeEnum = typeof ContactPhoneTypeEnum[keyof typeof ContactPhoneTypeEnum];
export declare const ContactRelationshipEnum: {
    readonly Parent: "Parent";
    readonly Grandparent: "Grandparent";
    readonly Self: "Self";
    readonly AuntUncle: "Aunt/Uncle";
    readonly Sibling: "Sibling";
    readonly Other: "Other";
    readonly Empty: "";
};
export declare type ContactRelationshipEnum = typeof ContactRelationshipEnum[keyof typeof ContactRelationshipEnum];
export declare const ContactTypeEnum: {
    readonly ParentGuardian: "Parent/Guardian";
    readonly Emergency: "Emergency";
    readonly Primary: "Primary";
    readonly Secondary: "Secondary";
    readonly Family: "Family";
    readonly Other: "Other";
    readonly Empty: "";
};
export declare type ContactTypeEnum = typeof ContactTypeEnum[keyof typeof ContactTypeEnum];
/**
 *
 * @export
 * @interface ContactObject
 */
export interface ContactObject {
    /**
     *
     * @type {Contact}
     * @memberof ContactObject
     */
    'object'?: Contact;
}
/**
 *
 * @export
 * @interface ContactResponse
 */
export interface ContactResponse {
    /**
     *
     * @type {Contact}
     * @memberof ContactResponse
     */
    'data'?: Contact;
}
/**
 *
 * @export
 * @interface ContactsCreated
 */
export interface ContactsCreated extends Event {
    /**
     *
     * @type {ContactObject}
     * @memberof ContactsCreated
     */
    'data'?: ContactObject;
}
/**
 *
 * @export
 * @interface ContactsCreatedAllOf
 */
export interface ContactsCreatedAllOf {
    /**
     *
     * @type {ContactObject}
     * @memberof ContactsCreatedAllOf
     */
    'data'?: ContactObject;
}
/**
 *
 * @export
 * @interface ContactsDeleted
 */
export interface ContactsDeleted extends Event {
    /**
     *
     * @type {ContactObject}
     * @memberof ContactsDeleted
     */
    'data'?: ContactObject;
}
/**
 *
 * @export
 * @interface ContactsResponse
 */
export interface ContactsResponse {
    /**
     *
     * @type {Array<ContactResponse>}
     * @memberof ContactsResponse
     */
    'data'?: Array<ContactResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof ContactsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface ContactsUpdated
 */
export interface ContactsUpdated extends Event {
    /**
     *
     * @type {ContactObject}
     * @memberof ContactsUpdated
     */
    'data'?: ContactObject;
    /**
     *
     * @type {object}
     * @memberof ContactsUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface ContactsUpdatedAllOf
 */
export interface ContactsUpdatedAllOf {
    /**
     *
     * @type {ContactObject}
     * @memberof ContactsUpdatedAllOf
     */
    'data'?: ContactObject;
    /**
     *
     * @type {object}
     * @memberof ContactsUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface Course
 */
export interface Course {
    /**
     *
     * @type {string}
     * @memberof Course
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof Course
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Course
     */
    'number'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Course
     */
    'district'?: string;
}
/**
 *
 * @export
 * @interface CourseObject
 */
export interface CourseObject {
    /**
     *
     * @type {Course}
     * @memberof CourseObject
     */
    'object'?: Course;
}
/**
 *
 * @export
 * @interface CourseResponse
 */
export interface CourseResponse {
    /**
     *
     * @type {Course}
     * @memberof CourseResponse
     */
    'data'?: Course;
}
/**
 *
 * @export
 * @interface CoursesCreated
 */
export interface CoursesCreated extends Event {
    /**
     *
     * @type {CourseObject}
     * @memberof CoursesCreated
     */
    'data'?: CourseObject;
}
/**
 *
 * @export
 * @interface CoursesCreatedAllOf
 */
export interface CoursesCreatedAllOf {
    /**
     *
     * @type {CourseObject}
     * @memberof CoursesCreatedAllOf
     */
    'data'?: CourseObject;
}
/**
 *
 * @export
 * @interface CoursesDeleted
 */
export interface CoursesDeleted extends Event {
    /**
     *
     * @type {CourseObject}
     * @memberof CoursesDeleted
     */
    'data'?: CourseObject;
}
/**
 *
 * @export
 * @interface CoursesResponse
 */
export interface CoursesResponse {
    /**
     *
     * @type {Array<CourseResponse>}
     * @memberof CoursesResponse
     */
    'data'?: Array<CourseResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof CoursesResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface CoursesUpdated
 */
export interface CoursesUpdated extends Event {
    /**
     *
     * @type {CourseObject}
     * @memberof CoursesUpdated
     */
    'data'?: CourseObject;
    /**
     *
     * @type {object}
     * @memberof CoursesUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface CoursesUpdatedAllOf
 */
export interface CoursesUpdatedAllOf {
    /**
     *
     * @type {CourseObject}
     * @memberof CoursesUpdatedAllOf
     */
    'data'?: CourseObject;
    /**
     *
     * @type {object}
     * @memberof CoursesUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface Credentials
 */
export interface Credentials {
    /**
     *
     * @type {string}
     * @memberof Credentials
     */
    'district_username'?: string;
}
/**
 *
 * @export
 * @interface District
 */
export interface District {
    /**
     *
     * @type {string}
     * @memberof District
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'mdr_number'?: string | null;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'nces_id'?: string | null;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'sis_type'?: string;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'state'?: DistrictStateEnum;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'last_sync'?: string | null;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'error'?: string;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'pause_start'?: string | null;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'pause_end'?: string | null;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'launch_date'?: string;
    /**
     *
     * @type {string}
     * @memberof District
     */
    'portal_url'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof District
     */
    'login_methods'?: Array<string>;
    /**
     *
     * @type {DistrictAdmin}
     * @memberof District
     */
    'district_contact'?: DistrictAdmin;
}
export declare const DistrictStateEnum: {
    readonly Running: "running";
    readonly Pending: "pending";
    readonly Error: "error";
    readonly Paused: "paused";
    readonly Empty: "";
    readonly Success: "success";
};
export declare type DistrictStateEnum = typeof DistrictStateEnum[keyof typeof DistrictStateEnum];
/**
 *
 * @export
 * @interface DistrictAdmin
 */
export interface DistrictAdmin {
    /**
     *
     * @type {string}
     * @memberof DistrictAdmin
     */
    'id'?: string;
    /**
     *
     * @type {AdminName}
     * @memberof DistrictAdmin
     */
    'name'?: AdminName;
    /**
     *
     * @type {string}
     * @memberof DistrictAdmin
     */
    'email'?: string;
    /**
     *
     * @type {string}
     * @memberof DistrictAdmin
     */
    'title'?: string | null;
    /**
     *
     * @type {string}
     * @memberof DistrictAdmin
     */
    'district'?: string;
}
/**
 *
 * @export
 * @interface DistrictAdminObject
 */
export interface DistrictAdminObject {
    /**
     *
     * @type {DistrictAdmin}
     * @memberof DistrictAdminObject
     */
    'object'?: DistrictAdmin;
}
/**
 *
 * @export
 * @interface DistrictAdminResponse
 */
export interface DistrictAdminResponse {
    /**
     *
     * @type {DistrictAdmin}
     * @memberof DistrictAdminResponse
     */
    'data'?: DistrictAdmin;
}
/**
 *
 * @export
 * @interface DistrictAdminsResponse
 */
export interface DistrictAdminsResponse {
    /**
     *
     * @type {Array<DistrictAdminResponse>}
     * @memberof DistrictAdminsResponse
     */
    'data'?: Array<DistrictAdminResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof DistrictAdminsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface DistrictObject
 */
export interface DistrictObject {
    /**
     *
     * @type {District}
     * @memberof DistrictObject
     */
    'object'?: District;
}
/**
 *
 * @export
 * @interface DistrictResponse
 */
export interface DistrictResponse {
    /**
     *
     * @type {District}
     * @memberof DistrictResponse
     */
    'data'?: District;
}
/**
 *
 * @export
 * @interface DistrictadminsCreated
 */
export interface DistrictadminsCreated extends Event {
    /**
     *
     * @type {DistrictAdminObject}
     * @memberof DistrictadminsCreated
     */
    'data'?: DistrictAdminObject;
}
/**
 *
 * @export
 * @interface DistrictadminsCreatedAllOf
 */
export interface DistrictadminsCreatedAllOf {
    /**
     *
     * @type {DistrictAdminObject}
     * @memberof DistrictadminsCreatedAllOf
     */
    'data'?: DistrictAdminObject;
}
/**
 *
 * @export
 * @interface DistrictadminsDeleted
 */
export interface DistrictadminsDeleted extends Event {
    /**
     *
     * @type {DistrictAdminObject}
     * @memberof DistrictadminsDeleted
     */
    'data'?: DistrictAdminObject;
}
/**
 *
 * @export
 * @interface DistrictadminsUpdated
 */
export interface DistrictadminsUpdated extends Event {
    /**
     *
     * @type {DistrictAdminObject}
     * @memberof DistrictadminsUpdated
     */
    'data'?: DistrictAdminObject;
    /**
     *
     * @type {object}
     * @memberof DistrictadminsUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface DistrictadminsUpdatedAllOf
 */
export interface DistrictadminsUpdatedAllOf {
    /**
     *
     * @type {DistrictAdminObject}
     * @memberof DistrictadminsUpdatedAllOf
     */
    'data'?: DistrictAdminObject;
    /**
     *
     * @type {object}
     * @memberof DistrictadminsUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface DistrictsCreated
 */
export interface DistrictsCreated extends Event {
    /**
     *
     * @type {DistrictObject}
     * @memberof DistrictsCreated
     */
    'data'?: DistrictObject;
}
/**
 *
 * @export
 * @interface DistrictsCreatedAllOf
 */
export interface DistrictsCreatedAllOf {
    /**
     *
     * @type {DistrictObject}
     * @memberof DistrictsCreatedAllOf
     */
    'data'?: DistrictObject;
}
/**
 *
 * @export
 * @interface DistrictsDeleted
 */
export interface DistrictsDeleted extends Event {
    /**
     *
     * @type {DistrictObject}
     * @memberof DistrictsDeleted
     */
    'data'?: DistrictObject;
}
/**
 *
 * @export
 * @interface DistrictsResponse
 */
export interface DistrictsResponse {
    /**
     *
     * @type {Array<DistrictResponse>}
     * @memberof DistrictsResponse
     */
    'data'?: Array<DistrictResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof DistrictsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface DistrictsUpdated
 */
export interface DistrictsUpdated extends Event {
    /**
     *
     * @type {DistrictObject}
     * @memberof DistrictsUpdated
     */
    'data'?: DistrictObject;
    /**
     *
     * @type {object}
     * @memberof DistrictsUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface DistrictsUpdatedAllOf
 */
export interface DistrictsUpdatedAllOf {
    /**
     *
     * @type {DistrictObject}
     * @memberof DistrictsUpdatedAllOf
     */
    'data'?: DistrictObject;
    /**
     *
     * @type {object}
     * @memberof DistrictsUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface Event
 */
export interface Event {
    /**
     *
     * @type {string}
     * @memberof Event
     */
    'type': string;
    /**
     *
     * @type {string}
     * @memberof Event
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof Event
     */
    'created'?: string;
}
/**
 *
 * @export
 * @interface EventResponse
 */
export interface EventResponse {
    /**
     *
     * @type {Event}
     * @memberof EventResponse
     */
    'data'?: Event;
}
/**
 *
 * @export
 * @interface EventsResponse
 */
export interface EventsResponse {
    /**
     *
     * @type {Array<EventResponse>}
     * @memberof EventsResponse
     */
    'data'?: Array<EventResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof EventsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface InternalError
 */
export interface InternalError {
    /**
     *
     * @type {string}
     * @memberof InternalError
     */
    'message'?: string;
}
/**
 *
 * @export
 * @interface Link
 */
export interface Link {
    /**
     *
     * @type {string}
     * @memberof Link
     */
    'rel'?: LinkRelEnum;
    /**
     *
     * @type {string}
     * @memberof Link
     */
    'uri'?: string;
}
export declare const LinkRelEnum: {
    readonly Next: "next";
    readonly Prev: "prev";
    readonly Self: "self";
};
export declare type LinkRelEnum = typeof LinkRelEnum[keyof typeof LinkRelEnum];
/**
 *
 * @export
 * @interface Location
 */
export interface Location {
    /**
     *
     * @type {string}
     * @memberof Location
     */
    'address'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    'city'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    'state'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    'zip'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    'lat'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    'lon'?: string | null;
}
/**
 *
 * @export
 * @interface Name
 */
export interface Name {
    /**
     *
     * @type {string}
     * @memberof Name
     */
    'first'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Name
     */
    'middle'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Name
     */
    'last'?: string | null;
}
/**
 *
 * @export
 * @interface NotFound
 */
export interface NotFound {
    /**
     *
     * @type {string}
     * @memberof NotFound
     */
    'message'?: string;
}
/**
 *
 * @export
 * @interface Principal
 */
export interface Principal {
    /**
     *
     * @type {string}
     * @memberof Principal
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Principal
     */
    'email'?: string | null;
}
/**
 *
 * @export
 * @interface School
 */
export interface School {
    /**
     *
     * @type {string}
     * @memberof School
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'created'?: string;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'district'?: string;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'high_grade'?: SchoolHighGradeEnum;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'last_modified'?: string;
    /**
     *
     * @type {Location}
     * @memberof School
     */
    'location'?: Location;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'low_grade'?: SchoolLowGradeEnum;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'nces_id'?: string | null;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'phone'?: string | null;
    /**
     *
     * @type {Principal}
     * @memberof School
     */
    'principal'?: Principal;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'school_number'?: string;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'sis_id'?: string;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'state_id'?: string | null;
    /**
     *
     * @type {string}
     * @memberof School
     */
    'mdr_number'?: string | null;
    /**
     *
     * @type {object}
     * @memberof School
     */
    'ext'?: object;
}
export declare const SchoolHighGradeEnum: {
    readonly InfantToddler: "InfantToddler";
    readonly Preschool: "Preschool";
    readonly PreKindergarten: "PreKindergarten";
    readonly TransitionalKindergarten: "TransitionalKindergarten";
    readonly Kindergarten: "Kindergarten";
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _13: "13";
    readonly PostGraduate: "PostGraduate";
    readonly Ungraded: "Ungraded";
    readonly Other: "Other";
    readonly Empty: "";
};
export declare type SchoolHighGradeEnum = typeof SchoolHighGradeEnum[keyof typeof SchoolHighGradeEnum];
export declare const SchoolLowGradeEnum: {
    readonly InfantToddler: "InfantToddler";
    readonly Preschool: "Preschool";
    readonly PreKindergarten: "PreKindergarten";
    readonly TransitionalKindergarten: "TransitionalKindergarten";
    readonly Kindergarten: "Kindergarten";
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _13: "13";
    readonly PostGraduate: "PostGraduate";
    readonly Ungraded: "Ungraded";
    readonly Other: "Other";
    readonly Empty: "";
};
export declare type SchoolLowGradeEnum = typeof SchoolLowGradeEnum[keyof typeof SchoolLowGradeEnum];
/**
 *
 * @export
 * @interface SchoolAdmin
 */
export interface SchoolAdmin {
    /**
     *
     * @type {string}
     * @memberof SchoolAdmin
     */
    'id'?: string;
    /**
     *
     * @type {Credentials}
     * @memberof SchoolAdmin
     */
    'credentials'?: Credentials;
    /**
     *
     * @type {string}
     * @memberof SchoolAdmin
     */
    'district'?: string;
    /**
     *
     * @type {string}
     * @memberof SchoolAdmin
     */
    'email'?: string;
    /**
     *
     * @type {AdminName}
     * @memberof SchoolAdmin
     */
    'name'?: AdminName;
    /**
     *
     * @type {Array<string>}
     * @memberof SchoolAdmin
     */
    'schools'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof SchoolAdmin
     */
    'staff_id'?: string;
    /**
     *
     * @type {string}
     * @memberof SchoolAdmin
     */
    'title'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SchoolAdmin
     */
    'department'?: string | null;
    /**
     *
     * @type {object}
     * @memberof SchoolAdmin
     */
    'ext'?: object;
}
/**
 *
 * @export
 * @interface SchoolAdminObject
 */
export interface SchoolAdminObject {
    /**
     *
     * @type {SchoolAdmin}
     * @memberof SchoolAdminObject
     */
    'object'?: SchoolAdmin;
}
/**
 *
 * @export
 * @interface SchoolAdminResponse
 */
export interface SchoolAdminResponse {
    /**
     *
     * @type {SchoolAdmin}
     * @memberof SchoolAdminResponse
     */
    'data'?: SchoolAdmin;
}
/**
 *
 * @export
 * @interface SchoolAdminsResponse
 */
export interface SchoolAdminsResponse {
    /**
     *
     * @type {Array<SchoolAdminResponse>}
     * @memberof SchoolAdminsResponse
     */
    'data'?: Array<SchoolAdminResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof SchoolAdminsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface SchoolEnrollment
 */
export interface SchoolEnrollment {
    /**
     *
     * @type {string}
     * @memberof SchoolEnrollment
     */
    'school'?: string;
    /**
     *
     * @type {string}
     * @memberof SchoolEnrollment
     */
    'start_date'?: string;
    /**
     *
     * @type {string}
     * @memberof SchoolEnrollment
     */
    'end_date'?: string;
}
/**
 *
 * @export
 * @interface SchoolObject
 */
export interface SchoolObject {
    /**
     *
     * @type {School}
     * @memberof SchoolObject
     */
    'object'?: School;
}
/**
 *
 * @export
 * @interface SchoolResponse
 */
export interface SchoolResponse {
    /**
     *
     * @type {School}
     * @memberof SchoolResponse
     */
    'data'?: School;
}
/**
 *
 * @export
 * @interface SchooladminsCreated
 */
export interface SchooladminsCreated extends Event {
    /**
     *
     * @type {SchoolAdminObject}
     * @memberof SchooladminsCreated
     */
    'data'?: SchoolAdminObject;
}
/**
 *
 * @export
 * @interface SchooladminsCreatedAllOf
 */
export interface SchooladminsCreatedAllOf {
    /**
     *
     * @type {SchoolAdminObject}
     * @memberof SchooladminsCreatedAllOf
     */
    'data'?: SchoolAdminObject;
}
/**
 *
 * @export
 * @interface SchooladminsDeleted
 */
export interface SchooladminsDeleted extends Event {
    /**
     *
     * @type {SchoolAdminObject}
     * @memberof SchooladminsDeleted
     */
    'data'?: SchoolAdminObject;
}
/**
 *
 * @export
 * @interface SchooladminsUpdated
 */
export interface SchooladminsUpdated extends Event {
    /**
     *
     * @type {SchoolAdminObject}
     * @memberof SchooladminsUpdated
     */
    'data'?: SchoolAdminObject;
    /**
     *
     * @type {object}
     * @memberof SchooladminsUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface SchooladminsUpdatedAllOf
 */
export interface SchooladminsUpdatedAllOf {
    /**
     *
     * @type {SchoolAdminObject}
     * @memberof SchooladminsUpdatedAllOf
     */
    'data'?: SchoolAdminObject;
    /**
     *
     * @type {object}
     * @memberof SchooladminsUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface SchoolsCreated
 */
export interface SchoolsCreated extends Event {
    /**
     *
     * @type {SchoolObject}
     * @memberof SchoolsCreated
     */
    'data'?: SchoolObject;
}
/**
 *
 * @export
 * @interface SchoolsCreatedAllOf
 */
export interface SchoolsCreatedAllOf {
    /**
     *
     * @type {SchoolObject}
     * @memberof SchoolsCreatedAllOf
     */
    'data'?: SchoolObject;
}
/**
 *
 * @export
 * @interface SchoolsDeleted
 */
export interface SchoolsDeleted extends Event {
    /**
     *
     * @type {SchoolObject}
     * @memberof SchoolsDeleted
     */
    'data'?: SchoolObject;
}
/**
 *
 * @export
 * @interface SchoolsResponse
 */
export interface SchoolsResponse {
    /**
     *
     * @type {Array<SchoolResponse>}
     * @memberof SchoolsResponse
     */
    'data'?: Array<SchoolResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof SchoolsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface SchoolsUpdated
 */
export interface SchoolsUpdated extends Event {
    /**
     *
     * @type {SchoolObject}
     * @memberof SchoolsUpdated
     */
    'data'?: SchoolObject;
    /**
     *
     * @type {object}
     * @memberof SchoolsUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface SchoolsUpdatedAllOf
 */
export interface SchoolsUpdatedAllOf {
    /**
     *
     * @type {SchoolObject}
     * @memberof SchoolsUpdatedAllOf
     */
    'data'?: SchoolObject;
    /**
     *
     * @type {object}
     * @memberof SchoolsUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface Section
 */
export interface Section {
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'course'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'created'?: string;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'district'?: string;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'grade'?: SectionGradeEnum;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'last_modified'?: string;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'period'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'school'?: string;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'section_number'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'sis_id'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Section
     */
    'students'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'subject'?: SectionSubjectEnum;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'teacher'?: string | null;
    /**
     *
     * @type {Array<string>}
     * @memberof Section
     */
    'teachers'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Section
     */
    'term_id'?: string | null;
    /**
     *
     * @type {object}
     * @memberof Section
     */
    'ext'?: object;
}
export declare const SectionGradeEnum: {
    readonly InfantToddler: "InfantToddler";
    readonly Preschool: "Preschool";
    readonly PreKindergarten: "PreKindergarten";
    readonly TransitionalKindergarten: "TransitionalKindergarten";
    readonly Kindergarten: "Kindergarten";
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _13: "13";
    readonly PostGraduate: "PostGraduate";
    readonly Ungraded: "Ungraded";
    readonly Other: "Other";
    readonly Empty: "";
};
export declare type SectionGradeEnum = typeof SectionGradeEnum[keyof typeof SectionGradeEnum];
export declare const SectionSubjectEnum: {
    readonly EnglishLanguageArts: "english/language arts";
    readonly Math: "math";
    readonly Science: "science";
    readonly SocialStudies: "social studies";
    readonly Language: "language";
    readonly HomeroomAdvisory: "homeroom/advisory";
    readonly InterventionsOnlineLearning: "interventions/online learning";
    readonly TechnologyAndEngineering: "technology and engineering";
    readonly PeAndHealth: "PE and health";
    readonly ArtsAndMusic: "arts and music";
    readonly Other: "other";
    readonly Empty: "";
};
export declare type SectionSubjectEnum = typeof SectionSubjectEnum[keyof typeof SectionSubjectEnum];
/**
 *
 * @export
 * @interface SectionObject
 */
export interface SectionObject {
    /**
     *
     * @type {Section}
     * @memberof SectionObject
     */
    'object'?: Section;
}
/**
 *
 * @export
 * @interface SectionResponse
 */
export interface SectionResponse {
    /**
     *
     * @type {Section}
     * @memberof SectionResponse
     */
    'data'?: Section;
}
/**
 *
 * @export
 * @interface SectionsCreated
 */
export interface SectionsCreated extends Event {
    /**
     *
     * @type {SectionObject}
     * @memberof SectionsCreated
     */
    'data'?: SectionObject;
}
/**
 *
 * @export
 * @interface SectionsCreatedAllOf
 */
export interface SectionsCreatedAllOf {
    /**
     *
     * @type {SectionObject}
     * @memberof SectionsCreatedAllOf
     */
    'data'?: SectionObject;
}
/**
 *
 * @export
 * @interface SectionsDeleted
 */
export interface SectionsDeleted extends Event {
    /**
     *
     * @type {SectionObject}
     * @memberof SectionsDeleted
     */
    'data'?: SectionObject;
}
/**
 *
 * @export
 * @interface SectionsResponse
 */
export interface SectionsResponse {
    /**
     *
     * @type {Array<SectionResponse>}
     * @memberof SectionsResponse
     */
    'data'?: Array<SectionResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof SectionsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface SectionsUpdated
 */
export interface SectionsUpdated extends Event {
    /**
     *
     * @type {SectionObject}
     * @memberof SectionsUpdated
     */
    'data'?: SectionObject;
    /**
     *
     * @type {object}
     * @memberof SectionsUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface SectionsUpdatedAllOf
 */
export interface SectionsUpdatedAllOf {
    /**
     *
     * @type {SectionObject}
     * @memberof SectionsUpdatedAllOf
     */
    'data'?: SectionObject;
    /**
     *
     * @type {object}
     * @memberof SectionsUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface Student
 */
export interface Student {
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'created'?: string;
    /**
     *
     * @type {Credentials}
     * @memberof Student
     */
    'credentials'?: Credentials;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'district'?: string;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'dob'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'ell_status'?: StudentEllStatusEnum;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'email'?: string | null;
    /**
     *
     * @type {Array<SchoolEnrollment>}
     * @memberof Student
     */
    'enrollments'?: Array<SchoolEnrollment>;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'gender'?: StudentGenderEnum;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'graduation_year'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'grade'?: StudentGradeEnum;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'hispanic_ethnicity'?: StudentHispanicEthnicityEnum;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'home_language'?: StudentHomeLanguageEnum;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'iep_status'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'last_modified'?: string;
    /**
     *
     * @type {Location}
     * @memberof Student
     */
    'location'?: Location;
    /**
     *
     * @type {Name}
     * @memberof Student
     */
    'name'?: Name;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'race'?: StudentRaceEnum;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'school'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Student
     */
    'schools'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'sis_id'?: string;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'state_id'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'student_number'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'unweighted_gpa'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Student
     */
    'weighted_gpa'?: string | null;
    /**
     *
     * @type {object}
     * @memberof Student
     */
    'ext'?: object;
}
export declare const StudentEllStatusEnum: {
    readonly Y: "Y";
    readonly N: "N";
    readonly Empty: "";
};
export declare type StudentEllStatusEnum = typeof StudentEllStatusEnum[keyof typeof StudentEllStatusEnum];
export declare const StudentGenderEnum: {
    readonly M: "M";
    readonly F: "F";
    readonly X: "X";
    readonly Empty: "";
};
export declare type StudentGenderEnum = typeof StudentGenderEnum[keyof typeof StudentGenderEnum];
export declare const StudentGradeEnum: {
    readonly InfantToddler: "InfantToddler";
    readonly Preschool: "Preschool";
    readonly PreKindergarten: "PreKindergarten";
    readonly TransitionalKindergarten: "TransitionalKindergarten";
    readonly Kindergarten: "Kindergarten";
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _13: "13";
    readonly PostGraduate: "PostGraduate";
    readonly Ungraded: "Ungraded";
    readonly Other: "Other";
    readonly Empty: "";
};
export declare type StudentGradeEnum = typeof StudentGradeEnum[keyof typeof StudentGradeEnum];
export declare const StudentHispanicEthnicityEnum: {
    readonly Y: "Y";
    readonly N: "N";
    readonly Empty: "";
};
export declare type StudentHispanicEthnicityEnum = typeof StudentHispanicEthnicityEnum[keyof typeof StudentHispanicEthnicityEnum];
export declare const StudentHomeLanguageEnum: {
    readonly English: "English";
    readonly Albanian: "Albanian";
    readonly Amharic: "Amharic";
    readonly Arabic: "Arabic";
    readonly Bengali: "Bengali";
    readonly Bosnian: "Bosnian";
    readonly Burmese: "Burmese";
    readonly Cantonese: "Cantonese";
    readonly Chinese: "Chinese";
    readonly Dutch: "Dutch";
    readonly Farsi: "Farsi";
    readonly French: "French";
    readonly German: "German";
    readonly Hebrew: "Hebrew";
    readonly Hindi: "Hindi";
    readonly Hmong: "Hmong";
    readonly Ilocano: "Ilocano";
    readonly Japanese: "Japanese";
    readonly Javanese: "Javanese";
    readonly Karen: "Karen";
    readonly Khmer: "Khmer";
    readonly Korean: "Korean";
    readonly Laotian: "Laotian";
    readonly Latvian: "Latvian";
    readonly Malay: "Malay";
    readonly Mandarin: "Mandarin";
    readonly Nepali: "Nepali";
    readonly Oromo: "Oromo";
    readonly Polish: "Polish";
    readonly Portuguese: "Portuguese";
    readonly Punjabi: "Punjabi";
    readonly Romanian: "Romanian";
    readonly Russian: "Russian";
    readonly Samoan: "Samoan";
    readonly Serbian: "Serbian";
    readonly Somali: "Somali";
    readonly Spanish: "Spanish";
    readonly Swahili: "Swahili";
    readonly Tagalog: "Tagalog";
    readonly Tamil: "Tamil";
    readonly Telugu: "Telugu";
    readonly Thai: "Thai";
    readonly Tigrinya: "Tigrinya";
    readonly Turkish: "Turkish";
    readonly Ukrainian: "Ukrainian";
    readonly Urdu: "Urdu";
    readonly Vietnamese: "Vietnamese";
    readonly Empty: "";
};
export declare type StudentHomeLanguageEnum = typeof StudentHomeLanguageEnum[keyof typeof StudentHomeLanguageEnum];
export declare const StudentRaceEnum: {
    readonly Caucasian: "Caucasian";
    readonly Asian: "Asian";
    readonly BlackOrAfricanAmerican: "Black or African American";
    readonly AmericanIndian: "American Indian";
    readonly HawaiianOrOtherPacificIslander: "Hawaiian or Other Pacific Islander";
    readonly TwoOrMoreRaces: "Two or More Races";
    readonly Unknown: "Unknown";
    readonly Empty: "";
};
export declare type StudentRaceEnum = typeof StudentRaceEnum[keyof typeof StudentRaceEnum];
/**
 *
 * @export
 * @interface StudentObject
 */
export interface StudentObject {
    /**
     *
     * @type {Student}
     * @memberof StudentObject
     */
    'object'?: Student;
}
/**
 *
 * @export
 * @interface StudentResponse
 */
export interface StudentResponse {
    /**
     *
     * @type {Student}
     * @memberof StudentResponse
     */
    'data'?: Student;
}
/**
 *
 * @export
 * @interface StudentsCreated
 */
export interface StudentsCreated extends Event {
    /**
     *
     * @type {StudentObject}
     * @memberof StudentsCreated
     */
    'data'?: StudentObject;
}
/**
 *
 * @export
 * @interface StudentsCreatedAllOf
 */
export interface StudentsCreatedAllOf {
    /**
     *
     * @type {StudentObject}
     * @memberof StudentsCreatedAllOf
     */
    'data'?: StudentObject;
}
/**
 *
 * @export
 * @interface StudentsDeleted
 */
export interface StudentsDeleted extends Event {
    /**
     *
     * @type {StudentObject}
     * @memberof StudentsDeleted
     */
    'data'?: StudentObject;
}
/**
 *
 * @export
 * @interface StudentsResponse
 */
export interface StudentsResponse {
    /**
     *
     * @type {Array<StudentResponse>}
     * @memberof StudentsResponse
     */
    'data'?: Array<StudentResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof StudentsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface StudentsUpdated
 */
export interface StudentsUpdated extends Event {
    /**
     *
     * @type {StudentObject}
     * @memberof StudentsUpdated
     */
    'data'?: StudentObject;
    /**
     *
     * @type {object}
     * @memberof StudentsUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface StudentsUpdatedAllOf
 */
export interface StudentsUpdatedAllOf {
    /**
     *
     * @type {StudentObject}
     * @memberof StudentsUpdatedAllOf
     */
    'data'?: StudentObject;
    /**
     *
     * @type {object}
     * @memberof StudentsUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface Teacher
 */
export interface Teacher {
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'created'?: string;
    /**
     *
     * @type {Credentials}
     * @memberof Teacher
     */
    'credentials'?: Credentials;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'district'?: string;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'email'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'last_modified'?: string;
    /**
     *
     * @type {Name}
     * @memberof Teacher
     */
    'name'?: Name;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'school'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Teacher
     */
    'schools'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'sis_id'?: string;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'state_id'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'teacher_number'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Teacher
     */
    'title'?: string | null;
    /**
     *
     * @type {object}
     * @memberof Teacher
     */
    'ext'?: object;
}
/**
 *
 * @export
 * @interface TeacherObject
 */
export interface TeacherObject {
    /**
     *
     * @type {Teacher}
     * @memberof TeacherObject
     */
    'object'?: Teacher;
}
/**
 *
 * @export
 * @interface TeacherResponse
 */
export interface TeacherResponse {
    /**
     *
     * @type {Teacher}
     * @memberof TeacherResponse
     */
    'data'?: Teacher;
}
/**
 *
 * @export
 * @interface TeachersCreated
 */
export interface TeachersCreated extends Event {
    /**
     *
     * @type {TeacherObject}
     * @memberof TeachersCreated
     */
    'data'?: TeacherObject;
}
/**
 *
 * @export
 * @interface TeachersCreatedAllOf
 */
export interface TeachersCreatedAllOf {
    /**
     *
     * @type {TeacherObject}
     * @memberof TeachersCreatedAllOf
     */
    'data'?: TeacherObject;
}
/**
 *
 * @export
 * @interface TeachersDeleted
 */
export interface TeachersDeleted extends Event {
    /**
     *
     * @type {TeacherObject}
     * @memberof TeachersDeleted
     */
    'data'?: TeacherObject;
}
/**
 *
 * @export
 * @interface TeachersResponse
 */
export interface TeachersResponse {
    /**
     *
     * @type {Array<TeacherResponse>}
     * @memberof TeachersResponse
     */
    'data'?: Array<TeacherResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof TeachersResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface TeachersUpdated
 */
export interface TeachersUpdated extends Event {
    /**
     *
     * @type {TeacherObject}
     * @memberof TeachersUpdated
     */
    'data'?: TeacherObject;
    /**
     *
     * @type {object}
     * @memberof TeachersUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface TeachersUpdatedAllOf
 */
export interface TeachersUpdatedAllOf {
    /**
     *
     * @type {TeacherObject}
     * @memberof TeachersUpdatedAllOf
     */
    'data'?: TeacherObject;
    /**
     *
     * @type {object}
     * @memberof TeachersUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface Term
 */
export interface Term {
    /**
     *
     * @type {string}
     * @memberof Term
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof Term
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Term
     */
    'start_date'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Term
     */
    'end_date'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Term
     */
    'district'?: string;
}
/**
 *
 * @export
 * @interface TermObject
 */
export interface TermObject {
    /**
     *
     * @type {Term}
     * @memberof TermObject
     */
    'object'?: Term;
}
/**
 *
 * @export
 * @interface TermResponse
 */
export interface TermResponse {
    /**
     *
     * @type {Term}
     * @memberof TermResponse
     */
    'data'?: Term;
}
/**
 *
 * @export
 * @interface TermsCreated
 */
export interface TermsCreated extends Event {
    /**
     *
     * @type {TermObject}
     * @memberof TermsCreated
     */
    'data'?: TermObject;
}
/**
 *
 * @export
 * @interface TermsCreatedAllOf
 */
export interface TermsCreatedAllOf {
    /**
     *
     * @type {TermObject}
     * @memberof TermsCreatedAllOf
     */
    'data'?: TermObject;
}
/**
 *
 * @export
 * @interface TermsDeleted
 */
export interface TermsDeleted extends Event {
    /**
     *
     * @type {TermObject}
     * @memberof TermsDeleted
     */
    'data'?: TermObject;
}
/**
 *
 * @export
 * @interface TermsResponse
 */
export interface TermsResponse {
    /**
     *
     * @type {Array<TermResponse>}
     * @memberof TermsResponse
     */
    'data'?: Array<TermResponse>;
    /**
     *
     * @type {Array<Link>}
     * @memberof TermsResponse
     */
    'links'?: Array<Link>;
}
/**
 *
 * @export
 * @interface TermsUpdated
 */
export interface TermsUpdated extends Event {
    /**
     *
     * @type {TermObject}
     * @memberof TermsUpdated
     */
    'data'?: TermObject;
    /**
     *
     * @type {object}
     * @memberof TermsUpdated
     */
    'previous_attributes'?: object;
}
/**
 *
 * @export
 * @interface TermsUpdatedAllOf
 */
export interface TermsUpdatedAllOf {
    /**
     *
     * @type {TermObject}
     * @memberof TermsUpdatedAllOf
     */
    'data'?: TermObject;
    /**
     *
     * @type {object}
     * @memberof TermsUpdatedAllOf
     */
    'previous_attributes'?: object;
}
/**
 * ContactsApi - axios parameter creator
 * @export
 */
export declare const ContactsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns a specific student contact
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContact: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of student contacts
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContacts: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the district for a student contact
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForContact: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the students for a student contact
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForContact: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ContactsApi - functional programming interface
 * @export
 */
export declare const ContactsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns a specific student contact
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContact(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ContactResponse>>;
    /**
     * Returns a list of student contacts
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContacts(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ContactsResponse>>;
    /**
     * Returns the district for a student contact
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForContact(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Returns the students for a student contact
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForContact(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<StudentsResponse>>;
};
/**
 * ContactsApi - factory interface
 * @export
 */
export declare const ContactsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns a specific student contact
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContact(id: string, options?: any): AxiosPromise<ContactResponse>;
    /**
     * Returns a list of student contacts
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContacts(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<ContactsResponse>;
    /**
     * Returns the district for a student contact
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForContact(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Returns the students for a student contact
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForContact(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<StudentsResponse>;
};
/**
 * ContactsApi - object-oriented interface
 * @export
 * @class ContactsApi
 * @extends {BaseAPI}
 */
export declare class ContactsApi extends BaseAPI {
    /**
     * Returns a specific student contact
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    getContact(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ContactResponse>>;
    /**
     * Returns a list of student contacts
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    getContacts(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ContactsResponse>>;
    /**
     * Returns the district for a student contact
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    getDistrictForContact(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Returns the students for a student contact
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    getStudentsForContact(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudentsResponse>>;
}
/**
 * CoursesApi - axios parameter creator
 * @export
 */
export declare const CoursesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns a specific course
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourse: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of courses
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourses: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the district for a course
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForCourse: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the sections for a Courses
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForCourse: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CoursesApi - functional programming interface
 * @export
 */
export declare const CoursesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns a specific course
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourse(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CourseResponse>>;
    /**
     * Returns a list of courses
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourses(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CoursesResponse>>;
    /**
     * Returns the district for a course
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForCourse(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Returns the sections for a Courses
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForCourse(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SectionsResponse>>;
};
/**
 * CoursesApi - factory interface
 * @export
 */
export declare const CoursesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns a specific course
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourse(id: string, options?: any): AxiosPromise<CourseResponse>;
    /**
     * Returns a list of courses
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourses(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<CoursesResponse>;
    /**
     * Returns the district for a course
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForCourse(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Returns the sections for a Courses
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForCourse(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<SectionsResponse>;
};
/**
 * CoursesApi - object-oriented interface
 * @export
 * @class CoursesApi
 * @extends {BaseAPI}
 */
export declare class CoursesApi extends BaseAPI {
    /**
     * Returns a specific course
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    getCourse(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CourseResponse>>;
    /**
     * Returns a list of courses
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    getCourses(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CoursesResponse>>;
    /**
     * Returns the district for a course
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    getDistrictForCourse(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Returns the sections for a Courses
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    getSectionsForCourse(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SectionsResponse>>;
}
/**
 * DistrictAdminsApi - axios parameter creator
 * @export
 */
export declare const DistrictAdminsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns a specific district admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictAdmin: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of district admins
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictAdmins: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the district for a district admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForDistrictAdmin: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DistrictAdminsApi - functional programming interface
 * @export
 */
export declare const DistrictAdminsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns a specific district admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictAdmin(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictAdminResponse>>;
    /**
     * Returns a list of district admins
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictAdmins(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictAdminsResponse>>;
    /**
     * Returns the district for a district admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForDistrictAdmin(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
};
/**
 * DistrictAdminsApi - factory interface
 * @export
 */
export declare const DistrictAdminsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns a specific district admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictAdmin(id: string, options?: any): AxiosPromise<DistrictAdminResponse>;
    /**
     * Returns a list of district admins
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictAdmins(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<DistrictAdminsResponse>;
    /**
     * Returns the district for a district admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForDistrictAdmin(id: string, options?: any): AxiosPromise<DistrictResponse>;
};
/**
 * DistrictAdminsApi - object-oriented interface
 * @export
 * @class DistrictAdminsApi
 * @extends {BaseAPI}
 */
export declare class DistrictAdminsApi extends BaseAPI {
    /**
     * Returns a specific district admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DistrictAdminsApi
     */
    getDistrictAdmin(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictAdminResponse>>;
    /**
     * Returns a list of district admins
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DistrictAdminsApi
     */
    getDistrictAdmins(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictAdminsResponse>>;
    /**
     * Returns the district for a district admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DistrictAdminsApi
     */
    getDistrictForDistrictAdmin(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
}
/**
 * DistrictsApi - axios parameter creator
 * @export
 */
export declare const DistrictsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns a specific district
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrict: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of districts. In practice this will only return the one district associated with the bearer token
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistricts: (count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DistrictsApi - functional programming interface
 * @export
 */
export declare const DistrictsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns a specific district
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrict(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Returns a list of districts. In practice this will only return the one district associated with the bearer token
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistricts(count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictsResponse>>;
};
/**
 * DistrictsApi - factory interface
 * @export
 */
export declare const DistrictsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns a specific district
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrict(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Returns a list of districts. In practice this will only return the one district associated with the bearer token
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistricts(count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<DistrictsResponse>;
};
/**
 * DistrictsApi - object-oriented interface
 * @export
 * @class DistrictsApi
 * @extends {BaseAPI}
 */
export declare class DistrictsApi extends BaseAPI {
    /**
     * Returns a specific district
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DistrictsApi
     */
    getDistrict(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Returns a list of districts. In practice this will only return the one district associated with the bearer token
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DistrictsApi
     */
    getDistricts(count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictsResponse>>;
}
/**
 * EventsApi - axios parameter creator
 * @export
 */
export declare const EventsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the specific event
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvent: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of events
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {string} [school]
     * @param {Array<string>} [recordType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvents: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, school?: string | undefined, recordType?: string[] | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * EventsApi - functional programming interface
 * @export
 */
export declare const EventsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the specific event
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvent(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<EventResponse>>;
    /**
     * Returns a list of events
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {string} [school]
     * @param {Array<string>} [recordType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvents(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, school?: string | undefined, recordType?: string[] | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<EventsResponse>>;
};
/**
 * EventsApi - factory interface
 * @export
 */
export declare const EventsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the specific event
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvent(id: string, options?: any): AxiosPromise<EventResponse>;
    /**
     * Returns a list of events
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {string} [school]
     * @param {Array<string>} [recordType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEvents(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, school?: string | undefined, recordType?: string[] | undefined, options?: any): AxiosPromise<EventsResponse>;
};
/**
 * EventsApi - object-oriented interface
 * @export
 * @class EventsApi
 * @extends {BaseAPI}
 */
export declare class EventsApi extends BaseAPI {
    /**
     * Returns the specific event
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    getEvent(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EventResponse>>;
    /**
     * Returns a list of events
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {string} [school]
     * @param {Array<string>} [recordType]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EventsApi
     */
    getEvents(limit?: number, startingAfter?: string, endingBefore?: string, school?: string, recordType?: Array<string>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<EventsResponse>>;
}
/**
 * SchoolAdminsApi - axios parameter creator
 * @export
 */
export declare const SchoolAdminsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the district for a school admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSchoolAdmin: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a specific school admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolAdmin: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of school admins
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolAdmins: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the schools for a school admin
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForSchoolAdmin: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SchoolAdminsApi - functional programming interface
 * @export
 */
export declare const SchoolAdminsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the district for a school admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSchoolAdmin(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Returns a specific school admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolAdmin(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolAdminResponse>>;
    /**
     * Returns a list of school admins
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolAdmins(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolAdminsResponse>>;
    /**
     * Returns the schools for a school admin
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForSchoolAdmin(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolsResponse>>;
};
/**
 * SchoolAdminsApi - factory interface
 * @export
 */
export declare const SchoolAdminsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the district for a school admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSchoolAdmin(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Returns a specific school admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolAdmin(id: string, options?: any): AxiosPromise<SchoolAdminResponse>;
    /**
     * Returns a list of school admins
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolAdmins(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<SchoolAdminsResponse>;
    /**
     * Returns the schools for a school admin
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForSchoolAdmin(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<SchoolsResponse>;
};
/**
 * SchoolAdminsApi - object-oriented interface
 * @export
 * @class SchoolAdminsApi
 * @extends {BaseAPI}
 */
export declare class SchoolAdminsApi extends BaseAPI {
    /**
     * Returns the district for a school admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolAdminsApi
     */
    getDistrictForSchoolAdmin(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Returns a specific school admin
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolAdminsApi
     */
    getSchoolAdmin(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolAdminResponse>>;
    /**
     * Returns a list of school admins
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolAdminsApi
     */
    getSchoolAdmins(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolAdminsResponse>>;
    /**
     * Returns the schools for a school admin
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolAdminsApi
     */
    getSchoolsForSchoolAdmin(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolsResponse>>;
}
/**
 * SchoolsApi - axios parameter creator
 * @export
 */
export declare const SchoolsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the district for a school
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSchool: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a specific school
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchool: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of schools
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchools: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the sections for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForSchool: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the students for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForSchool: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the teachers for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForSchool: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SchoolsApi - functional programming interface
 * @export
 */
export declare const SchoolsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the district for a school
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSchool(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Returns a specific school
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchool(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolResponse>>;
    /**
     * Returns a list of schools
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchools(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolsResponse>>;
    /**
     * Returns the sections for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForSchool(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SectionsResponse>>;
    /**
     * Returns the students for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForSchool(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<StudentsResponse>>;
    /**
     * Returns the teachers for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForSchool(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TeachersResponse>>;
};
/**
 * SchoolsApi - factory interface
 * @export
 */
export declare const SchoolsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the district for a school
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSchool(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Returns a specific school
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchool(id: string, options?: any): AxiosPromise<SchoolResponse>;
    /**
     * Returns a list of schools
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchools(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<SchoolsResponse>;
    /**
     * Returns the sections for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForSchool(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<SectionsResponse>;
    /**
     * Returns the students for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForSchool(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<StudentsResponse>;
    /**
     * Returns the teachers for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForSchool(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<TeachersResponse>;
};
/**
 * SchoolsApi - object-oriented interface
 * @export
 * @class SchoolsApi
 * @extends {BaseAPI}
 */
export declare class SchoolsApi extends BaseAPI {
    /**
     * Returns the district for a school
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolsApi
     */
    getDistrictForSchool(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Returns a specific school
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolsApi
     */
    getSchool(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolResponse>>;
    /**
     * Returns a list of schools
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolsApi
     */
    getSchools(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolsResponse>>;
    /**
     * Returns the sections for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolsApi
     */
    getSectionsForSchool(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SectionsResponse>>;
    /**
     * Returns the students for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolsApi
     */
    getStudentsForSchool(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudentsResponse>>;
    /**
     * Returns the teachers for a school
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SchoolsApi
     */
    getTeachersForSchool(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TeachersResponse>>;
}
/**
 * SectionsApi - axios parameter creator
 * @export
 */
export declare const SectionsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the course for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourseForSection: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the district for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSection: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the school for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForSection: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a specific section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSection: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of sections
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSections: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the students for a section
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForSection: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the primary teacher for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeacherForSection: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the teachers for a section
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForSection: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the term for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTermForSection: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SectionsApi - functional programming interface
 * @export
 */
export declare const SectionsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the course for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourseForSection(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CourseResponse>>;
    /**
     * Returns the district for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSection(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Returns the school for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForSection(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolResponse>>;
    /**
     * Returns a specific section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSection(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SectionResponse>>;
    /**
     * Returns a list of sections
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSections(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SectionsResponse>>;
    /**
     * Returns the students for a section
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForSection(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<StudentsResponse>>;
    /**
     * Returns the primary teacher for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeacherForSection(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TeacherResponse>>;
    /**
     * Returns the teachers for a section
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForSection(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TeachersResponse>>;
    /**
     * Returns the term for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTermForSection(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TermResponse>>;
};
/**
 * SectionsApi - factory interface
 * @export
 */
export declare const SectionsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the course for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCourseForSection(id: string, options?: any): AxiosPromise<CourseResponse>;
    /**
     * Returns the district for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForSection(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Returns the school for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForSection(id: string, options?: any): AxiosPromise<SchoolResponse>;
    /**
     * Returns a specific section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSection(id: string, options?: any): AxiosPromise<SectionResponse>;
    /**
     * Returns a list of sections
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSections(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<SectionsResponse>;
    /**
     * Returns the students for a section
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForSection(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<StudentsResponse>;
    /**
     * Returns the primary teacher for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeacherForSection(id: string, options?: any): AxiosPromise<TeacherResponse>;
    /**
     * Returns the teachers for a section
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForSection(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<TeachersResponse>;
    /**
     * Returns the term for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTermForSection(id: string, options?: any): AxiosPromise<TermResponse>;
};
/**
 * SectionsApi - object-oriented interface
 * @export
 * @class SectionsApi
 * @extends {BaseAPI}
 */
export declare class SectionsApi extends BaseAPI {
    /**
     * Returns the course for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getCourseForSection(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CourseResponse>>;
    /**
     * Returns the district for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getDistrictForSection(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Returns the school for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getSchoolForSection(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolResponse>>;
    /**
     * Returns a specific section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getSection(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SectionResponse>>;
    /**
     * Returns a list of sections
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getSections(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SectionsResponse>>;
    /**
     * Returns the students for a section
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getStudentsForSection(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudentsResponse>>;
    /**
     * Returns the primary teacher for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getTeacherForSection(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TeacherResponse>>;
    /**
     * Returns the teachers for a section
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getTeachersForSection(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TeachersResponse>>;
    /**
     * Returns the term for a section
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SectionsApi
     */
    getTermForSection(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TermResponse>>;
}
/**
 * StudentsApi - axios parameter creator
 * @export
 */
export declare const StudentsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the contacts for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContactsForStudent: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the district for a student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForStudent: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the primary school for a student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForStudent: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the schools for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForStudent: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the sections for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForStudent: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a specific student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudent: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of students
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudents: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the teachers for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForStudent: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * StudentsApi - functional programming interface
 * @export
 */
export declare const StudentsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the contacts for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContactsForStudent(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ContactsResponse>>;
    /**
     * Returns the district for a student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForStudent(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Returns the primary school for a student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForStudent(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolResponse>>;
    /**
     * Returns the schools for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForStudent(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolsResponse>>;
    /**
     * Returns the sections for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForStudent(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SectionsResponse>>;
    /**
     * Returns a specific student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudent(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<StudentResponse>>;
    /**
     * Returns a list of students
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudents(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<StudentsResponse>>;
    /**
     * Returns the teachers for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForStudent(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TeachersResponse>>;
};
/**
 * StudentsApi - factory interface
 * @export
 */
export declare const StudentsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the contacts for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getContactsForStudent(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<ContactsResponse>;
    /**
     * Returns the district for a student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForStudent(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Returns the primary school for a student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForStudent(id: string, options?: any): AxiosPromise<SchoolResponse>;
    /**
     * Returns the schools for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForStudent(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<SchoolsResponse>;
    /**
     * Returns the sections for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForStudent(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<SectionsResponse>;
    /**
     * Returns a specific student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudent(id: string, options?: any): AxiosPromise<StudentResponse>;
    /**
     * Returns a list of students
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudents(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<StudentsResponse>;
    /**
     * Returns the teachers for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachersForStudent(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<TeachersResponse>;
};
/**
 * StudentsApi - object-oriented interface
 * @export
 * @class StudentsApi
 * @extends {BaseAPI}
 */
export declare class StudentsApi extends BaseAPI {
    /**
     * Returns the contacts for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudentsApi
     */
    getContactsForStudent(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ContactsResponse>>;
    /**
     * Returns the district for a student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudentsApi
     */
    getDistrictForStudent(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Returns the primary school for a student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudentsApi
     */
    getSchoolForStudent(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolResponse>>;
    /**
     * Returns the schools for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudentsApi
     */
    getSchoolsForStudent(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolsResponse>>;
    /**
     * Returns the sections for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudentsApi
     */
    getSectionsForStudent(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SectionsResponse>>;
    /**
     * Returns a specific student
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudentsApi
     */
    getStudent(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudentResponse>>;
    /**
     * Returns a list of students
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudentsApi
     */
    getStudents(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudentsResponse>>;
    /**
     * Returns the teachers for a student
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudentsApi
     */
    getTeachersForStudent(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TeachersResponse>>;
}
/**
 * TeachersApi - axios parameter creator
 * @export
 */
export declare const TeachersApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the district for a teacher
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForTeacher: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves school info for a teacher.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForTeacher: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the schools for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForTeacher: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the sections for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForTeacher: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the students for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForTeacher: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a specific teacher
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeacher: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of teachers
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachers: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TeachersApi - functional programming interface
 * @export
 */
export declare const TeachersApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the district for a teacher
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForTeacher(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Retrieves school info for a teacher.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForTeacher(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolResponse>>;
    /**
     * Returns the schools for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForTeacher(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SchoolsResponse>>;
    /**
     * Returns the sections for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForTeacher(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SectionsResponse>>;
    /**
     * Returns the students for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForTeacher(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<StudentsResponse>>;
    /**
     * Returns a specific teacher
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeacher(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TeacherResponse>>;
    /**
     * Returns a list of teachers
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachers(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TeachersResponse>>;
};
/**
 * TeachersApi - factory interface
 * @export
 */
export declare const TeachersApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the district for a teacher
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForTeacher(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Retrieves school info for a teacher.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolForTeacher(id: string, options?: any): AxiosPromise<SchoolResponse>;
    /**
     * Returns the schools for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSchoolsForTeacher(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<SchoolsResponse>;
    /**
     * Returns the sections for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForTeacher(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<SectionsResponse>;
    /**
     * Returns the students for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudentsForTeacher(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<StudentsResponse>;
    /**
     * Returns a specific teacher
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeacher(id: string, options?: any): AxiosPromise<TeacherResponse>;
    /**
     * Returns a list of teachers
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTeachers(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<TeachersResponse>;
};
/**
 * TeachersApi - object-oriented interface
 * @export
 * @class TeachersApi
 * @extends {BaseAPI}
 */
export declare class TeachersApi extends BaseAPI {
    /**
     * Returns the district for a teacher
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TeachersApi
     */
    getDistrictForTeacher(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Retrieves school info for a teacher.
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TeachersApi
     */
    getSchoolForTeacher(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolResponse>>;
    /**
     * Returns the schools for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TeachersApi
     */
    getSchoolsForTeacher(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SchoolsResponse>>;
    /**
     * Returns the sections for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TeachersApi
     */
    getSectionsForTeacher(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SectionsResponse>>;
    /**
     * Returns the students for a teacher
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TeachersApi
     */
    getStudentsForTeacher(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudentsResponse>>;
    /**
     * Returns a specific teacher
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TeachersApi
     */
    getTeacher(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TeacherResponse>>;
    /**
     * Returns a list of teachers
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TeachersApi
     */
    getTeachers(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TeachersResponse>>;
}
/**
 * TermsApi - axios parameter creator
 * @export
 */
export declare const TermsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Returns the district for a term
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForTerm: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the sections for a term
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForTerm: (id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a specific term
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTerm: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a list of terms
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTerms: (limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TermsApi - functional programming interface
 * @export
 */
export declare const TermsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Returns the district for a term
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForTerm(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DistrictResponse>>;
    /**
     * Returns the sections for a term
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForTerm(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SectionsResponse>>;
    /**
     * Returns a specific term
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTerm(id: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TermResponse>>;
    /**
     * Returns a list of terms
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTerms(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<TermsResponse>>;
};
/**
 * TermsApi - factory interface
 * @export
 */
export declare const TermsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Returns the district for a term
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDistrictForTerm(id: string, options?: any): AxiosPromise<DistrictResponse>;
    /**
     * Returns the sections for a term
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSectionsForTerm(id: string, limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, options?: any): AxiosPromise<SectionsResponse>;
    /**
     * Returns a specific term
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTerm(id: string, options?: any): AxiosPromise<TermResponse>;
    /**
     * Returns a list of terms
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTerms(limit?: number | undefined, startingAfter?: string | undefined, endingBefore?: string | undefined, count?: "" | "undefined" | "true" | "false" | undefined, options?: any): AxiosPromise<TermsResponse>;
};
/**
 * TermsApi - object-oriented interface
 * @export
 * @class TermsApi
 * @extends {BaseAPI}
 */
export declare class TermsApi extends BaseAPI {
    /**
     * Returns the district for a term
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TermsApi
     */
    getDistrictForTerm(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DistrictResponse>>;
    /**
     * Returns the sections for a term
     * @param {string} id
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TermsApi
     */
    getSectionsForTerm(id: string, limit?: number, startingAfter?: string, endingBefore?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SectionsResponse>>;
    /**
     * Returns a specific term
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TermsApi
     */
    getTerm(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TermResponse>>;
    /**
     * Returns a list of terms
     * @param {number} [limit]
     * @param {string} [startingAfter]
     * @param {string} [endingBefore]
     * @param {'' | 'true' | 'false' | 'undefined'} [count]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TermsApi
     */
    getTerms(limit?: number, startingAfter?: string, endingBefore?: string, count?: '' | 'true' | 'false' | 'undefined', options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TermsResponse>>;
}
